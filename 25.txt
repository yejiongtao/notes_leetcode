

260. general idea
	XOR all nums to get the XOR of the two numbers we're looking for
	the XOR must has at least one bit as 1, find an arbitrary bit that is 1
	that bit seperates the nums into two sets, where the two numbers must be in different sets
code
    public int[] singleNumber(int[] nums) {
        int xor = 0;
        for(int n: nums) xor ^= n;
        xor &= -xor;				// brilliant! n and -n must have only one common 1
						// cuz n+(-n)=0
        int[] res = {0, 0};			// init an array like this
        for(int n: nums)
            if((xor & n) == 0) res[0] ^= n;	// &'s priority is lower than == 
            else res[1] ^= n;
        return res;
    }